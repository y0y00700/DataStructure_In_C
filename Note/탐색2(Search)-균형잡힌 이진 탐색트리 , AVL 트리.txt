Chapter 12. 탐색2

AVL 트리 (이론) => 구현 (완전하게 균형을 잡지는 않는다.) +alpha

트리 학습 계보
-> 트리 , 이진트리 
-> 이진 탐색 트리
-> 균형 잡힌 이진 탐색 트리 : AVL 트리

이진 탐색 트리의 문제점과 AVL 트리

1부터 5까지 순서대로 저장이 이뤄진 경우 

이진트리 탐색 연산은 O(log2n)의 시간 복잡도이지만,
 균형이 맞지 않을수록 O(n)에 가까운 시간 복잡도를 보인다.

즉, 저장 순서가 원만하지 않는 경우 worst Case 에 가까워짐.

이진 탐색 트리의 균형 문제를 해결한 트리
 AVL 트리 , 2-3-4 트리 , Red-Black 트리 등...

자동으로 균형 잡는 AVL 트리와 균형 인수

균형 인수 = 왼쪽 서브 트리의 높이 - 오른쪽 서브 트리의 높이

균형 인수의 절댓값이 2 이상인 경우 리밸런싱 진행

AVL 트리는 균형 인수(Balance Factor)를 기준으로 트리의 균형을 잡기 위한
재조정(리밸런싱)의 진행 시기를 결정한다.

리밸런싱 상태 종류
 - LL상태
 - RR상태
 - LR상태
 - RL상태

리밸런싱이 필요한 첫 번째 상태와 LL회전

5가 저장된 노드의 왼쪽(Left)에 3이 저장된 자식 노드가 하나 존재하고,
그 자식 노드의 왼쪽(Left)에 1이 저장된 자식 노드가 또 하나 존재한다.

이러한 LL상태를 균형 잡기 위해서 LL회전을 진행한다.

RR상태와 RR 회전
LL상태와 방향만 다르다.
ChangeRightSubTree(pNode,GetLeftSubTree(cNode));
ChangeLeftSubTree(cNode,pNode);

LR상태
LL상태 그리고 RR상태와 같이 한 번의 회전으로 균형을 잡을 수 없다.
따라서 LR 상태는 한번의 회전으로 균형이 잡히는 LL상태 또는 RR 상태가 되도록 하는 것이 우선이다.

LR상태는 부분적 RR회전을 통해서(RR회전의 부수적인 효과를 이용해서) LL상태가 되게 할 수 있다.
이후 LL회전을 통해 균형을 잡는다.

RL상태와 RL 회전
LR 상태와 반대로 구현해준다.
즉, 부분적 LL 회전을 통해 변경하면 RR 상태로 변경된다.
해당 RR상태로 변경된 트리 상태를 RR 회전을 통해 균형을 잡는다.


