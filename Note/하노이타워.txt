하노이 타워(Tower of Hanoi)

문제 -> 해결책 -> 해결책을 그대로 코드로 옮김.
- 문제점 : 호출관계를 파악하려 들어가는 순간, 어려워진다.

하노이 타워 문제의 이해
원반을 A에서 C로 이동하기
- 제약 사항.
원반은 한 번에 하나씩 옮길 수 있다.
옮기는 과정에서 작은 원반의 위에 큰 원반이 올려져서는 안된다.

지금 보인 과정에서 반복의 패턴을 찾아야 문제 해결 코드를 작성 가능하다.

Recursive 사고
4 - > C 로 옮겨야 해 그러기 위해선  1,2,3 -> B 
1,2,3 -> B 로 옮겨야 해 그리기 위해선 1,2 ->C
1,2 -> C 로 옮겨야 해 그리기 위해선 1 -> B
1->B 옮김 (재귀)

반복되는 일련의 과정을 찾기 위한 힌트
n개를 옮기기 위해 n-1개를 일단 옮겨야 한다.
작은 문제하나를 해결하면 이 해결법이 반복되어 
문제를 풀게 된다.(Optimal Substructure)

예시) 
하노이 타워 A B C 에 원반 4개가 있다고 가정한다.
목적. 큰 원반 n개를 A에서 C로 이동
1. 작은 원반 3개를 A에서 B로 이동
   - 작은 원반 n-1개를 A에서 B로 이동
2. 큰원반 1개를 A에서 C로 이동
    - 큰 원반 1개를 A에서 C로 이동
3. 작은 원반 3개를 B에서 C로 이동
    - 작은 원반 n-1개를 B에서 C로 이동

void HonoiTowerMove(int num, char from, char by, char to)
{
 // 원반 num의 수에 해당하는 원반을 from에서 to로 
 //이동 시키되 그 과정에서 by를 활용한다.
}

탈출조건 num == 1 (원반이 다 없어졌을때,)

printf("%c");// character

