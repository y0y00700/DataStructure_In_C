트리(Tree) : 비선형 자료구조

선형 자료구조와는 소개되는 이면이 다르다.

선형자료구조는 저장과 꺼내기 / 삭제가 주제임.

선형 자료구조
이전 선형자료구조의 패턴 : 구조체 + 함수 (삽입,조회,삭제)

비선형 자료구조는 표현에 가까움.

● 트리의 개요

트리는 계층적 관계(Hierarchical Relationship)를 표현하는 자료구조이다.

트리를 만드는 도구를 만들고!
저장의 관점(삽입 삭제 조회)으로만 보면 안된다.(표현)

why? : 목적이 없고 말그대로 도구일 뿐이다.

트리를 구성하는 여러개의 도구를 만든다.
ex) 트리를 구성하는 노드를 생성하는 도구
    , 트리간 연결을 삭제하는 도구 등...

트리는 단순한 데이터의 저장을 넘어서 데이터의 표현을 위한 도구이다.
ex)회사 조직 계층도, 의사결정 트리

트리 관련 용어의 소개
노드 : node
 - 트리의 구성요소에 해당하는 데이터를 담은 요소
간선 : edge
 - 노드와 노드를 연결하는 연결선
루트 노드 : root node
 - 트리 구조에서 최상위에 존재하는 A와 같은 노드
단말 노드 : terminal node
 - 아래로 또 다른 노드가 연결되어 있지 않은 노드
내부 노드 : internal node
 - 단말 노드를 제외한 모든 노드

※ 연결리스트의 노드와 의미적으로 약간 다름
트리의 노드간 관계
 1.부모노드(parent) (상위)
 2.자식노드(child)   (하위)
 3.형제노드(sibling) (동일)

● 서브 트리의 이해

서브 트리 역시 서브트리로 이뤄져 있으며, 그 서브 트리 역시 
 또 다른 서브 트리로 이뤄져 있다. 이렇듯 트리는 그 구조가 재귀적이다!

하나의 트리를 구성하는 왼쪽과 오른쪽의 작은 트리를 가리켜 서브트리라 한다.

서브트리 역시 또 다른 서브 트리를 갖는다.

(트리 내에 서브트리 & 서브트리 내에 추가 서브트리도 존재)

